{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","url","fcolor","scolor","className","style","background","src","alt","data","Cards","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAuBeA,EAlBF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC9B,OACI,sBAAKC,UAAY,OAAOC,MAAO,CAC3BC,WAAW,4BAAD,OAA8BJ,EAA9B,aAAyCC,EAAzC,MADd,UAGI,qBAAKI,IAAMN,EAAKO,IAAKR,IACrB,6BAAKA,QCRXS,EAAO,CACT,CACE,KAAQ,SACR,IAAO,2CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,QACR,IAAO,0CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,YAiBDC,EAZD,WACV,OACI,yCAEQD,EAAKE,KAAI,YAAgC,IAA9BX,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC1B,OAAO,cAAC,EAAD,CAAmBH,KAAQA,EAAMC,IAAOA,EAAKC,OAASA,EAAQC,OAAQA,GAAzDH,UC7BzBY,EAJH,WACV,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00907d64.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from \"prop-types\"\n\nimport \"./Card.css\"\n\nconst Card = ({lang, url, fcolor, scolor}) => {\n    return (\n        <div className = \"card\" style={{\n            background: `linear-gradient(to left, ${fcolor}, ${scolor})`,\n        }}>\n            <img src= {url} alt={lang}/>\n            <h3>{lang}</h3>\n        </div>\n    )\n}\n\nCard.propTypes = {\n    lang: PropTypes.string,\n    url: PropTypes.string,\n    fcolor: PropTypes.string,\n    scolor: PropTypes.string\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\nconst data = [\n    {\n      \"lang\": \"Python\",\n      \"url\": \"https://cdn.svgporn.com/logos/python.svg\",\n      \"fcolor\": \"#00c3ff\",\n      \"scolor\": \"#ffff1c\"\n    },\n    {\n      \"lang\": \"Java\",\n      \"url\": \"https://cdn.svgporn.com/logos/java.svg\",\n      \"fcolor\": \"#D31027\",\n      \"scolor\": \"#EA384D\"\n    },\n    {\n      \"lang\": \"React\",\n      \"url\": \"https://cdn.svgporn.com/logos/react.svg\",\n      \"fcolor\": \"#000428\",\n      \"scolor\": \"#004e92\"\n    },\n    {\n      \"lang\": \"Perl\",\n      \"url\": \"https://cdn.svgporn.com/logos/perl.svg\",\n      \"fcolor\": \"#cc2b5e\",\n      \"scolor\": \"#753a88\"\n    }\n  ]\n   ;\n\nconst Cards = () => {\n    return (\n        <> {/* esta etiqueta vac√≠a es igual que la etiqueta <React.Fragment> de React */}\n            {\n                data.map(({lang, url, fcolor, scolor})=>{\n                    return <Card key = {lang} lang = {lang} url = {url} fcolor= {fcolor} scolor={scolor} />\n                })\n            }\n        </>\n    )\n}\n\nexport default Cards\n","import './App.css';\nimport Cards from \"./components/Cards\"\n\nconst App = () => {\n  return <Cards/>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}